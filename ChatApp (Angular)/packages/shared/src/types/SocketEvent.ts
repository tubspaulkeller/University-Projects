export enum GroupEvents {
  GET_INIT_DATA = 'GROUP:GET_INIT_DATA',
  GET_ALL_GROUPS = 'GROUP:GET_ALL_GROUPS',
  ADD_GROUP = 'GROUP:ADD_GROUP',
  DELETE_GROUP = 'GROUP:DELETE_GROUP',
  JOIN_GROUP = 'GROUP:JOIN_GROUP',
  LEAVE_GROUP = 'GROUP:LEAVE_GROUP',
  GET_MAIN_ID = 'GROUP:GET_MAIN_ID',
  GET_OR_CREATE_PRIVATE = 'GROUP:GET_OR_CREATE_PRIVATE',
  RETURN_INIT_DATA = 'GROUP:RETURN_INIT_DATA',
  RETURN_ALL_GROUPS = 'GROUP:RETURN_ALL_GROUPS',
  USER_JOINED = 'GROUP:USER_JOINED',
  USER_LEFT = 'GROUP:USER_LEFT',
  GROUP_ADDED = 'GROUP:GROUP_ADDED',
  GROUP_DELETED = 'GROUP:GROUP_DELETED',
  RETURN_MAIN_ID = 'GROUP:RETURN_MAIN_ID',
  RETURN_PRIVATE_ID = 'GROUP:RETURN_PRIVATE_ID',
}

export enum ChatEvents {
  GET_INIT_MESSAGES = 'CHAT:GET_INIT_MESSAGES',
  START_TYPING = 'CHAT:START_TYPING',
  STOP_TYPING = 'CHAT:STOP_TYPING',
  SEND_MESSAGE_TEXT = 'CHAT:SEND_MESSAGE_TEXT',
  SEND_MESSAGE_IMAGE = 'CHAT:SEND_MESSAGE_IMAGE',
  SEND_MESSAGE_AUDIO = 'CHAT:SEND_MESSAGE_AUDIO',
  SEND_MESSAGE_GIF = 'CHAT:SEND_MESSAGE_GIF',

  RETURN_INIT_MESSAGES = 'CHAT:RETURN_INIT_MESSAGES',
  USER_STARTED_TYPING = 'CHAT:USER_STARTED_TYPING',
  USER_STOPPED_TYPING = 'CHAT:USER_STOPPED_TYPING',
  MESSAGE_RETURN_TEXT = 'CHAT:MESSAGE_RETURN_TEXT',
  MESSAGE_RETURN_IMAGE = 'CHAT:MESSAGE_RETURN_IMAGE',
  MESSAGE_RETURN_AUDIO = 'CHAT:MESSAGE_RETURN_AUDIO',
  MESSAGE_RETURN_GIF = 'CHAT:MESSAGE_RETURN_GIF',
}

export enum UserEvents {
  REFRESH_PROFILE = 'USER:REFRESH_PROFILE',
  PROFILE_REFRESHED = 'USER:PROFILE_REFRESHED',
}

export type SocketEventType = GroupEvents | ChatEvents | UserEvents;

export interface EventMessage<T> {
  type: SocketEventType;
  groupId?: string; // can be set to filter for messages within that scope
  data: T;
}
